#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.8                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_6053851564587979273) {
   out_6053851564587979273[0] = 0;
   out_6053851564587979273[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_6053851564587979273[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_6053851564587979273[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_6053851564587979273[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_6053851564587979273[5] = -sin(in_vec[1]);
   out_6053851564587979273[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6053851564587979273[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6053851564587979273[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_6053851564587979273[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_6053851564587979273[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_6053851564587979273[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_6053851564587979273[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6053851564587979273[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6053851564587979273[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_6053851564587979273[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_6053851564587979273[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_6053851564587979273[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7389794714027921961) {
   out_7389794714027921961[0] = delta_x[0] + nom_x[0];
   out_7389794714027921961[1] = delta_x[1] + nom_x[1];
   out_7389794714027921961[2] = delta_x[2] + nom_x[2];
   out_7389794714027921961[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7389794714027921961[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7389794714027921961[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7389794714027921961[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7389794714027921961[7] = delta_x[6] + nom_x[7];
   out_7389794714027921961[8] = delta_x[7] + nom_x[8];
   out_7389794714027921961[9] = delta_x[8] + nom_x[9];
   out_7389794714027921961[10] = delta_x[9] + nom_x[10];
   out_7389794714027921961[11] = delta_x[10] + nom_x[11];
   out_7389794714027921961[12] = delta_x[11] + nom_x[12];
   out_7389794714027921961[13] = delta_x[12] + nom_x[13];
   out_7389794714027921961[14] = delta_x[13] + nom_x[14];
   out_7389794714027921961[15] = delta_x[14] + nom_x[15];
   out_7389794714027921961[16] = delta_x[15] + nom_x[16];
   out_7389794714027921961[17] = delta_x[16] + nom_x[17];
   out_7389794714027921961[18] = delta_x[17] + nom_x[18];
   out_7389794714027921961[19] = delta_x[18] + nom_x[19];
   out_7389794714027921961[20] = delta_x[19] + nom_x[20];
   out_7389794714027921961[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5057486488975891714) {
   out_5057486488975891714[0] = -nom_x[0] + true_x[0];
   out_5057486488975891714[1] = -nom_x[1] + true_x[1];
   out_5057486488975891714[2] = -nom_x[2] + true_x[2];
   out_5057486488975891714[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5057486488975891714[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5057486488975891714[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5057486488975891714[6] = -nom_x[7] + true_x[7];
   out_5057486488975891714[7] = -nom_x[8] + true_x[8];
   out_5057486488975891714[8] = -nom_x[9] + true_x[9];
   out_5057486488975891714[9] = -nom_x[10] + true_x[10];
   out_5057486488975891714[10] = -nom_x[11] + true_x[11];
   out_5057486488975891714[11] = -nom_x[12] + true_x[12];
   out_5057486488975891714[12] = -nom_x[13] + true_x[13];
   out_5057486488975891714[13] = -nom_x[14] + true_x[14];
   out_5057486488975891714[14] = -nom_x[15] + true_x[15];
   out_5057486488975891714[15] = -nom_x[16] + true_x[16];
   out_5057486488975891714[16] = -nom_x[17] + true_x[17];
   out_5057486488975891714[17] = -nom_x[18] + true_x[18];
   out_5057486488975891714[18] = -nom_x[19] + true_x[19];
   out_5057486488975891714[19] = -nom_x[20] + true_x[20];
   out_5057486488975891714[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6748075909193761881) {
   out_6748075909193761881[0] = 1.0;
   out_6748075909193761881[1] = 0.0;
   out_6748075909193761881[2] = 0.0;
   out_6748075909193761881[3] = 0.0;
   out_6748075909193761881[4] = 0.0;
   out_6748075909193761881[5] = 0.0;
   out_6748075909193761881[6] = 0.0;
   out_6748075909193761881[7] = 0.0;
   out_6748075909193761881[8] = 0.0;
   out_6748075909193761881[9] = 0.0;
   out_6748075909193761881[10] = 0.0;
   out_6748075909193761881[11] = 0.0;
   out_6748075909193761881[12] = 0.0;
   out_6748075909193761881[13] = 0.0;
   out_6748075909193761881[14] = 0.0;
   out_6748075909193761881[15] = 0.0;
   out_6748075909193761881[16] = 0.0;
   out_6748075909193761881[17] = 0.0;
   out_6748075909193761881[18] = 0.0;
   out_6748075909193761881[19] = 0.0;
   out_6748075909193761881[20] = 0.0;
   out_6748075909193761881[21] = 0.0;
   out_6748075909193761881[22] = 1.0;
   out_6748075909193761881[23] = 0.0;
   out_6748075909193761881[24] = 0.0;
   out_6748075909193761881[25] = 0.0;
   out_6748075909193761881[26] = 0.0;
   out_6748075909193761881[27] = 0.0;
   out_6748075909193761881[28] = 0.0;
   out_6748075909193761881[29] = 0.0;
   out_6748075909193761881[30] = 0.0;
   out_6748075909193761881[31] = 0.0;
   out_6748075909193761881[32] = 0.0;
   out_6748075909193761881[33] = 0.0;
   out_6748075909193761881[34] = 0.0;
   out_6748075909193761881[35] = 0.0;
   out_6748075909193761881[36] = 0.0;
   out_6748075909193761881[37] = 0.0;
   out_6748075909193761881[38] = 0.0;
   out_6748075909193761881[39] = 0.0;
   out_6748075909193761881[40] = 0.0;
   out_6748075909193761881[41] = 0.0;
   out_6748075909193761881[42] = 0.0;
   out_6748075909193761881[43] = 0.0;
   out_6748075909193761881[44] = 1.0;
   out_6748075909193761881[45] = 0.0;
   out_6748075909193761881[46] = 0.0;
   out_6748075909193761881[47] = 0.0;
   out_6748075909193761881[48] = 0.0;
   out_6748075909193761881[49] = 0.0;
   out_6748075909193761881[50] = 0.0;
   out_6748075909193761881[51] = 0.0;
   out_6748075909193761881[52] = 0.0;
   out_6748075909193761881[53] = 0.0;
   out_6748075909193761881[54] = 0.0;
   out_6748075909193761881[55] = 0.0;
   out_6748075909193761881[56] = 0.0;
   out_6748075909193761881[57] = 0.0;
   out_6748075909193761881[58] = 0.0;
   out_6748075909193761881[59] = 0.0;
   out_6748075909193761881[60] = 0.0;
   out_6748075909193761881[61] = 0.0;
   out_6748075909193761881[62] = 0.0;
   out_6748075909193761881[63] = 0.0;
   out_6748075909193761881[64] = 0.0;
   out_6748075909193761881[65] = 0.0;
   out_6748075909193761881[66] = -0.5*state[4];
   out_6748075909193761881[67] = -0.5*state[5];
   out_6748075909193761881[68] = -0.5*state[6];
   out_6748075909193761881[69] = 0.0;
   out_6748075909193761881[70] = 0.0;
   out_6748075909193761881[71] = 0.0;
   out_6748075909193761881[72] = 0.0;
   out_6748075909193761881[73] = 0.0;
   out_6748075909193761881[74] = 0.0;
   out_6748075909193761881[75] = 0.0;
   out_6748075909193761881[76] = 0.0;
   out_6748075909193761881[77] = 0.0;
   out_6748075909193761881[78] = 0.0;
   out_6748075909193761881[79] = 0.0;
   out_6748075909193761881[80] = 0.0;
   out_6748075909193761881[81] = 0.0;
   out_6748075909193761881[82] = 0.0;
   out_6748075909193761881[83] = 0.0;
   out_6748075909193761881[84] = 0.0;
   out_6748075909193761881[85] = 0.0;
   out_6748075909193761881[86] = 0.0;
   out_6748075909193761881[87] = 0.5*state[3];
   out_6748075909193761881[88] = 0.5*state[6];
   out_6748075909193761881[89] = -0.5*state[5];
   out_6748075909193761881[90] = 0.0;
   out_6748075909193761881[91] = 0.0;
   out_6748075909193761881[92] = 0.0;
   out_6748075909193761881[93] = 0.0;
   out_6748075909193761881[94] = 0.0;
   out_6748075909193761881[95] = 0.0;
   out_6748075909193761881[96] = 0.0;
   out_6748075909193761881[97] = 0.0;
   out_6748075909193761881[98] = 0.0;
   out_6748075909193761881[99] = 0.0;
   out_6748075909193761881[100] = 0.0;
   out_6748075909193761881[101] = 0.0;
   out_6748075909193761881[102] = 0.0;
   out_6748075909193761881[103] = 0.0;
   out_6748075909193761881[104] = 0.0;
   out_6748075909193761881[105] = 0.0;
   out_6748075909193761881[106] = 0.0;
   out_6748075909193761881[107] = 0.0;
   out_6748075909193761881[108] = -0.5*state[6];
   out_6748075909193761881[109] = 0.5*state[3];
   out_6748075909193761881[110] = 0.5*state[4];
   out_6748075909193761881[111] = 0.0;
   out_6748075909193761881[112] = 0.0;
   out_6748075909193761881[113] = 0.0;
   out_6748075909193761881[114] = 0.0;
   out_6748075909193761881[115] = 0.0;
   out_6748075909193761881[116] = 0.0;
   out_6748075909193761881[117] = 0.0;
   out_6748075909193761881[118] = 0.0;
   out_6748075909193761881[119] = 0.0;
   out_6748075909193761881[120] = 0.0;
   out_6748075909193761881[121] = 0.0;
   out_6748075909193761881[122] = 0.0;
   out_6748075909193761881[123] = 0.0;
   out_6748075909193761881[124] = 0.0;
   out_6748075909193761881[125] = 0.0;
   out_6748075909193761881[126] = 0.0;
   out_6748075909193761881[127] = 0.0;
   out_6748075909193761881[128] = 0.0;
   out_6748075909193761881[129] = 0.5*state[5];
   out_6748075909193761881[130] = -0.5*state[4];
   out_6748075909193761881[131] = 0.5*state[3];
   out_6748075909193761881[132] = 0.0;
   out_6748075909193761881[133] = 0.0;
   out_6748075909193761881[134] = 0.0;
   out_6748075909193761881[135] = 0.0;
   out_6748075909193761881[136] = 0.0;
   out_6748075909193761881[137] = 0.0;
   out_6748075909193761881[138] = 0.0;
   out_6748075909193761881[139] = 0.0;
   out_6748075909193761881[140] = 0.0;
   out_6748075909193761881[141] = 0.0;
   out_6748075909193761881[142] = 0.0;
   out_6748075909193761881[143] = 0.0;
   out_6748075909193761881[144] = 0.0;
   out_6748075909193761881[145] = 0.0;
   out_6748075909193761881[146] = 0.0;
   out_6748075909193761881[147] = 0.0;
   out_6748075909193761881[148] = 0.0;
   out_6748075909193761881[149] = 0.0;
   out_6748075909193761881[150] = 0.0;
   out_6748075909193761881[151] = 0.0;
   out_6748075909193761881[152] = 0.0;
   out_6748075909193761881[153] = 1.0;
   out_6748075909193761881[154] = 0.0;
   out_6748075909193761881[155] = 0.0;
   out_6748075909193761881[156] = 0.0;
   out_6748075909193761881[157] = 0.0;
   out_6748075909193761881[158] = 0.0;
   out_6748075909193761881[159] = 0.0;
   out_6748075909193761881[160] = 0.0;
   out_6748075909193761881[161] = 0.0;
   out_6748075909193761881[162] = 0.0;
   out_6748075909193761881[163] = 0.0;
   out_6748075909193761881[164] = 0.0;
   out_6748075909193761881[165] = 0.0;
   out_6748075909193761881[166] = 0.0;
   out_6748075909193761881[167] = 0.0;
   out_6748075909193761881[168] = 0.0;
   out_6748075909193761881[169] = 0.0;
   out_6748075909193761881[170] = 0.0;
   out_6748075909193761881[171] = 0.0;
   out_6748075909193761881[172] = 0.0;
   out_6748075909193761881[173] = 0.0;
   out_6748075909193761881[174] = 0.0;
   out_6748075909193761881[175] = 1.0;
   out_6748075909193761881[176] = 0.0;
   out_6748075909193761881[177] = 0.0;
   out_6748075909193761881[178] = 0.0;
   out_6748075909193761881[179] = 0.0;
   out_6748075909193761881[180] = 0.0;
   out_6748075909193761881[181] = 0.0;
   out_6748075909193761881[182] = 0.0;
   out_6748075909193761881[183] = 0.0;
   out_6748075909193761881[184] = 0.0;
   out_6748075909193761881[185] = 0.0;
   out_6748075909193761881[186] = 0.0;
   out_6748075909193761881[187] = 0.0;
   out_6748075909193761881[188] = 0.0;
   out_6748075909193761881[189] = 0.0;
   out_6748075909193761881[190] = 0.0;
   out_6748075909193761881[191] = 0.0;
   out_6748075909193761881[192] = 0.0;
   out_6748075909193761881[193] = 0.0;
   out_6748075909193761881[194] = 0.0;
   out_6748075909193761881[195] = 0.0;
   out_6748075909193761881[196] = 0.0;
   out_6748075909193761881[197] = 1.0;
   out_6748075909193761881[198] = 0.0;
   out_6748075909193761881[199] = 0.0;
   out_6748075909193761881[200] = 0.0;
   out_6748075909193761881[201] = 0.0;
   out_6748075909193761881[202] = 0.0;
   out_6748075909193761881[203] = 0.0;
   out_6748075909193761881[204] = 0.0;
   out_6748075909193761881[205] = 0.0;
   out_6748075909193761881[206] = 0.0;
   out_6748075909193761881[207] = 0.0;
   out_6748075909193761881[208] = 0.0;
   out_6748075909193761881[209] = 0.0;
   out_6748075909193761881[210] = 0.0;
   out_6748075909193761881[211] = 0.0;
   out_6748075909193761881[212] = 0.0;
   out_6748075909193761881[213] = 0.0;
   out_6748075909193761881[214] = 0.0;
   out_6748075909193761881[215] = 0.0;
   out_6748075909193761881[216] = 0.0;
   out_6748075909193761881[217] = 0.0;
   out_6748075909193761881[218] = 0.0;
   out_6748075909193761881[219] = 1.0;
   out_6748075909193761881[220] = 0.0;
   out_6748075909193761881[221] = 0.0;
   out_6748075909193761881[222] = 0.0;
   out_6748075909193761881[223] = 0.0;
   out_6748075909193761881[224] = 0.0;
   out_6748075909193761881[225] = 0.0;
   out_6748075909193761881[226] = 0.0;
   out_6748075909193761881[227] = 0.0;
   out_6748075909193761881[228] = 0.0;
   out_6748075909193761881[229] = 0.0;
   out_6748075909193761881[230] = 0.0;
   out_6748075909193761881[231] = 0.0;
   out_6748075909193761881[232] = 0.0;
   out_6748075909193761881[233] = 0.0;
   out_6748075909193761881[234] = 0.0;
   out_6748075909193761881[235] = 0.0;
   out_6748075909193761881[236] = 0.0;
   out_6748075909193761881[237] = 0.0;
   out_6748075909193761881[238] = 0.0;
   out_6748075909193761881[239] = 0.0;
   out_6748075909193761881[240] = 0.0;
   out_6748075909193761881[241] = 1.0;
   out_6748075909193761881[242] = 0.0;
   out_6748075909193761881[243] = 0.0;
   out_6748075909193761881[244] = 0.0;
   out_6748075909193761881[245] = 0.0;
   out_6748075909193761881[246] = 0.0;
   out_6748075909193761881[247] = 0.0;
   out_6748075909193761881[248] = 0.0;
   out_6748075909193761881[249] = 0.0;
   out_6748075909193761881[250] = 0.0;
   out_6748075909193761881[251] = 0.0;
   out_6748075909193761881[252] = 0.0;
   out_6748075909193761881[253] = 0.0;
   out_6748075909193761881[254] = 0.0;
   out_6748075909193761881[255] = 0.0;
   out_6748075909193761881[256] = 0.0;
   out_6748075909193761881[257] = 0.0;
   out_6748075909193761881[258] = 0.0;
   out_6748075909193761881[259] = 0.0;
   out_6748075909193761881[260] = 0.0;
   out_6748075909193761881[261] = 0.0;
   out_6748075909193761881[262] = 0.0;
   out_6748075909193761881[263] = 1.0;
   out_6748075909193761881[264] = 0.0;
   out_6748075909193761881[265] = 0.0;
   out_6748075909193761881[266] = 0.0;
   out_6748075909193761881[267] = 0.0;
   out_6748075909193761881[268] = 0.0;
   out_6748075909193761881[269] = 0.0;
   out_6748075909193761881[270] = 0.0;
   out_6748075909193761881[271] = 0.0;
   out_6748075909193761881[272] = 0.0;
   out_6748075909193761881[273] = 0.0;
   out_6748075909193761881[274] = 0.0;
   out_6748075909193761881[275] = 0.0;
   out_6748075909193761881[276] = 0.0;
   out_6748075909193761881[277] = 0.0;
   out_6748075909193761881[278] = 0.0;
   out_6748075909193761881[279] = 0.0;
   out_6748075909193761881[280] = 0.0;
   out_6748075909193761881[281] = 0.0;
   out_6748075909193761881[282] = 0.0;
   out_6748075909193761881[283] = 0.0;
   out_6748075909193761881[284] = 0.0;
   out_6748075909193761881[285] = 1.0;
   out_6748075909193761881[286] = 0.0;
   out_6748075909193761881[287] = 0.0;
   out_6748075909193761881[288] = 0.0;
   out_6748075909193761881[289] = 0.0;
   out_6748075909193761881[290] = 0.0;
   out_6748075909193761881[291] = 0.0;
   out_6748075909193761881[292] = 0.0;
   out_6748075909193761881[293] = 0.0;
   out_6748075909193761881[294] = 0.0;
   out_6748075909193761881[295] = 0.0;
   out_6748075909193761881[296] = 0.0;
   out_6748075909193761881[297] = 0.0;
   out_6748075909193761881[298] = 0.0;
   out_6748075909193761881[299] = 0.0;
   out_6748075909193761881[300] = 0.0;
   out_6748075909193761881[301] = 0.0;
   out_6748075909193761881[302] = 0.0;
   out_6748075909193761881[303] = 0.0;
   out_6748075909193761881[304] = 0.0;
   out_6748075909193761881[305] = 0.0;
   out_6748075909193761881[306] = 0.0;
   out_6748075909193761881[307] = 1.0;
   out_6748075909193761881[308] = 0.0;
   out_6748075909193761881[309] = 0.0;
   out_6748075909193761881[310] = 0.0;
   out_6748075909193761881[311] = 0.0;
   out_6748075909193761881[312] = 0.0;
   out_6748075909193761881[313] = 0.0;
   out_6748075909193761881[314] = 0.0;
   out_6748075909193761881[315] = 0.0;
   out_6748075909193761881[316] = 0.0;
   out_6748075909193761881[317] = 0.0;
   out_6748075909193761881[318] = 0.0;
   out_6748075909193761881[319] = 0.0;
   out_6748075909193761881[320] = 0.0;
   out_6748075909193761881[321] = 0.0;
   out_6748075909193761881[322] = 0.0;
   out_6748075909193761881[323] = 0.0;
   out_6748075909193761881[324] = 0.0;
   out_6748075909193761881[325] = 0.0;
   out_6748075909193761881[326] = 0.0;
   out_6748075909193761881[327] = 0.0;
   out_6748075909193761881[328] = 0.0;
   out_6748075909193761881[329] = 1.0;
   out_6748075909193761881[330] = 0.0;
   out_6748075909193761881[331] = 0.0;
   out_6748075909193761881[332] = 0.0;
   out_6748075909193761881[333] = 0.0;
   out_6748075909193761881[334] = 0.0;
   out_6748075909193761881[335] = 0.0;
   out_6748075909193761881[336] = 0.0;
   out_6748075909193761881[337] = 0.0;
   out_6748075909193761881[338] = 0.0;
   out_6748075909193761881[339] = 0.0;
   out_6748075909193761881[340] = 0.0;
   out_6748075909193761881[341] = 0.0;
   out_6748075909193761881[342] = 0.0;
   out_6748075909193761881[343] = 0.0;
   out_6748075909193761881[344] = 0.0;
   out_6748075909193761881[345] = 0.0;
   out_6748075909193761881[346] = 0.0;
   out_6748075909193761881[347] = 0.0;
   out_6748075909193761881[348] = 0.0;
   out_6748075909193761881[349] = 0.0;
   out_6748075909193761881[350] = 0.0;
   out_6748075909193761881[351] = 1.0;
   out_6748075909193761881[352] = 0.0;
   out_6748075909193761881[353] = 0.0;
   out_6748075909193761881[354] = 0.0;
   out_6748075909193761881[355] = 0.0;
   out_6748075909193761881[356] = 0.0;
   out_6748075909193761881[357] = 0.0;
   out_6748075909193761881[358] = 0.0;
   out_6748075909193761881[359] = 0.0;
   out_6748075909193761881[360] = 0.0;
   out_6748075909193761881[361] = 0.0;
   out_6748075909193761881[362] = 0.0;
   out_6748075909193761881[363] = 0.0;
   out_6748075909193761881[364] = 0.0;
   out_6748075909193761881[365] = 0.0;
   out_6748075909193761881[366] = 0.0;
   out_6748075909193761881[367] = 0.0;
   out_6748075909193761881[368] = 0.0;
   out_6748075909193761881[369] = 0.0;
   out_6748075909193761881[370] = 0.0;
   out_6748075909193761881[371] = 0.0;
   out_6748075909193761881[372] = 0.0;
   out_6748075909193761881[373] = 1.0;
   out_6748075909193761881[374] = 0.0;
   out_6748075909193761881[375] = 0.0;
   out_6748075909193761881[376] = 0.0;
   out_6748075909193761881[377] = 0.0;
   out_6748075909193761881[378] = 0.0;
   out_6748075909193761881[379] = 0.0;
   out_6748075909193761881[380] = 0.0;
   out_6748075909193761881[381] = 0.0;
   out_6748075909193761881[382] = 0.0;
   out_6748075909193761881[383] = 0.0;
   out_6748075909193761881[384] = 0.0;
   out_6748075909193761881[385] = 0.0;
   out_6748075909193761881[386] = 0.0;
   out_6748075909193761881[387] = 0.0;
   out_6748075909193761881[388] = 0.0;
   out_6748075909193761881[389] = 0.0;
   out_6748075909193761881[390] = 0.0;
   out_6748075909193761881[391] = 0.0;
   out_6748075909193761881[392] = 0.0;
   out_6748075909193761881[393] = 0.0;
   out_6748075909193761881[394] = 0.0;
   out_6748075909193761881[395] = 1.0;
   out_6748075909193761881[396] = 0.0;
   out_6748075909193761881[397] = 0.0;
   out_6748075909193761881[398] = 0.0;
   out_6748075909193761881[399] = 0.0;
   out_6748075909193761881[400] = 0.0;
   out_6748075909193761881[401] = 0.0;
   out_6748075909193761881[402] = 0.0;
   out_6748075909193761881[403] = 0.0;
   out_6748075909193761881[404] = 0.0;
   out_6748075909193761881[405] = 0.0;
   out_6748075909193761881[406] = 0.0;
   out_6748075909193761881[407] = 0.0;
   out_6748075909193761881[408] = 0.0;
   out_6748075909193761881[409] = 0.0;
   out_6748075909193761881[410] = 0.0;
   out_6748075909193761881[411] = 0.0;
   out_6748075909193761881[412] = 0.0;
   out_6748075909193761881[413] = 0.0;
   out_6748075909193761881[414] = 0.0;
   out_6748075909193761881[415] = 0.0;
   out_6748075909193761881[416] = 0.0;
   out_6748075909193761881[417] = 1.0;
   out_6748075909193761881[418] = 0.0;
   out_6748075909193761881[419] = 0.0;
   out_6748075909193761881[420] = 0.0;
   out_6748075909193761881[421] = 0.0;
   out_6748075909193761881[422] = 0.0;
   out_6748075909193761881[423] = 0.0;
   out_6748075909193761881[424] = 0.0;
   out_6748075909193761881[425] = 0.0;
   out_6748075909193761881[426] = 0.0;
   out_6748075909193761881[427] = 0.0;
   out_6748075909193761881[428] = 0.0;
   out_6748075909193761881[429] = 0.0;
   out_6748075909193761881[430] = 0.0;
   out_6748075909193761881[431] = 0.0;
   out_6748075909193761881[432] = 0.0;
   out_6748075909193761881[433] = 0.0;
   out_6748075909193761881[434] = 0.0;
   out_6748075909193761881[435] = 0.0;
   out_6748075909193761881[436] = 0.0;
   out_6748075909193761881[437] = 0.0;
   out_6748075909193761881[438] = 0.0;
   out_6748075909193761881[439] = 1.0;
   out_6748075909193761881[440] = 0.0;
   out_6748075909193761881[441] = 0.0;
   out_6748075909193761881[442] = 0.0;
   out_6748075909193761881[443] = 0.0;
   out_6748075909193761881[444] = 0.0;
   out_6748075909193761881[445] = 0.0;
   out_6748075909193761881[446] = 0.0;
   out_6748075909193761881[447] = 0.0;
   out_6748075909193761881[448] = 0.0;
   out_6748075909193761881[449] = 0.0;
   out_6748075909193761881[450] = 0.0;
   out_6748075909193761881[451] = 0.0;
   out_6748075909193761881[452] = 0.0;
   out_6748075909193761881[453] = 0.0;
   out_6748075909193761881[454] = 0.0;
   out_6748075909193761881[455] = 0.0;
   out_6748075909193761881[456] = 0.0;
   out_6748075909193761881[457] = 0.0;
   out_6748075909193761881[458] = 0.0;
   out_6748075909193761881[459] = 0.0;
   out_6748075909193761881[460] = 0.0;
   out_6748075909193761881[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8074529069450670553) {
   out_8074529069450670553[0] = dt*state[7] + state[0];
   out_8074529069450670553[1] = dt*state[8] + state[1];
   out_8074529069450670553[2] = dt*state[9] + state[2];
   out_8074529069450670553[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8074529069450670553[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8074529069450670553[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8074529069450670553[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8074529069450670553[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8074529069450670553[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8074529069450670553[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8074529069450670553[10] = state[10];
   out_8074529069450670553[11] = state[11];
   out_8074529069450670553[12] = state[12];
   out_8074529069450670553[13] = state[13];
   out_8074529069450670553[14] = state[14];
   out_8074529069450670553[15] = state[15];
   out_8074529069450670553[16] = state[16];
   out_8074529069450670553[17] = state[17];
   out_8074529069450670553[18] = state[18];
   out_8074529069450670553[19] = state[19];
   out_8074529069450670553[20] = state[20];
   out_8074529069450670553[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5427312182938220170) {
   out_5427312182938220170[0] = 1;
   out_5427312182938220170[1] = 0;
   out_5427312182938220170[2] = 0;
   out_5427312182938220170[3] = 0;
   out_5427312182938220170[4] = 0;
   out_5427312182938220170[5] = 0;
   out_5427312182938220170[6] = dt;
   out_5427312182938220170[7] = 0;
   out_5427312182938220170[8] = 0;
   out_5427312182938220170[9] = 0;
   out_5427312182938220170[10] = 0;
   out_5427312182938220170[11] = 0;
   out_5427312182938220170[12] = 0;
   out_5427312182938220170[13] = 0;
   out_5427312182938220170[14] = 0;
   out_5427312182938220170[15] = 0;
   out_5427312182938220170[16] = 0;
   out_5427312182938220170[17] = 0;
   out_5427312182938220170[18] = 0;
   out_5427312182938220170[19] = 0;
   out_5427312182938220170[20] = 0;
   out_5427312182938220170[21] = 0;
   out_5427312182938220170[22] = 1;
   out_5427312182938220170[23] = 0;
   out_5427312182938220170[24] = 0;
   out_5427312182938220170[25] = 0;
   out_5427312182938220170[26] = 0;
   out_5427312182938220170[27] = 0;
   out_5427312182938220170[28] = dt;
   out_5427312182938220170[29] = 0;
   out_5427312182938220170[30] = 0;
   out_5427312182938220170[31] = 0;
   out_5427312182938220170[32] = 0;
   out_5427312182938220170[33] = 0;
   out_5427312182938220170[34] = 0;
   out_5427312182938220170[35] = 0;
   out_5427312182938220170[36] = 0;
   out_5427312182938220170[37] = 0;
   out_5427312182938220170[38] = 0;
   out_5427312182938220170[39] = 0;
   out_5427312182938220170[40] = 0;
   out_5427312182938220170[41] = 0;
   out_5427312182938220170[42] = 0;
   out_5427312182938220170[43] = 0;
   out_5427312182938220170[44] = 1;
   out_5427312182938220170[45] = 0;
   out_5427312182938220170[46] = 0;
   out_5427312182938220170[47] = 0;
   out_5427312182938220170[48] = 0;
   out_5427312182938220170[49] = 0;
   out_5427312182938220170[50] = dt;
   out_5427312182938220170[51] = 0;
   out_5427312182938220170[52] = 0;
   out_5427312182938220170[53] = 0;
   out_5427312182938220170[54] = 0;
   out_5427312182938220170[55] = 0;
   out_5427312182938220170[56] = 0;
   out_5427312182938220170[57] = 0;
   out_5427312182938220170[58] = 0;
   out_5427312182938220170[59] = 0;
   out_5427312182938220170[60] = 0;
   out_5427312182938220170[61] = 0;
   out_5427312182938220170[62] = 0;
   out_5427312182938220170[63] = 0;
   out_5427312182938220170[64] = 0;
   out_5427312182938220170[65] = 0;
   out_5427312182938220170[66] = 1;
   out_5427312182938220170[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5427312182938220170[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5427312182938220170[69] = 0;
   out_5427312182938220170[70] = 0;
   out_5427312182938220170[71] = 0;
   out_5427312182938220170[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5427312182938220170[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5427312182938220170[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5427312182938220170[75] = 0;
   out_5427312182938220170[76] = 0;
   out_5427312182938220170[77] = 0;
   out_5427312182938220170[78] = 0;
   out_5427312182938220170[79] = 0;
   out_5427312182938220170[80] = 0;
   out_5427312182938220170[81] = 0;
   out_5427312182938220170[82] = 0;
   out_5427312182938220170[83] = 0;
   out_5427312182938220170[84] = 0;
   out_5427312182938220170[85] = 0;
   out_5427312182938220170[86] = 0;
   out_5427312182938220170[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5427312182938220170[88] = 1;
   out_5427312182938220170[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5427312182938220170[90] = 0;
   out_5427312182938220170[91] = 0;
   out_5427312182938220170[92] = 0;
   out_5427312182938220170[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5427312182938220170[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5427312182938220170[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5427312182938220170[96] = 0;
   out_5427312182938220170[97] = 0;
   out_5427312182938220170[98] = 0;
   out_5427312182938220170[99] = 0;
   out_5427312182938220170[100] = 0;
   out_5427312182938220170[101] = 0;
   out_5427312182938220170[102] = 0;
   out_5427312182938220170[103] = 0;
   out_5427312182938220170[104] = 0;
   out_5427312182938220170[105] = 0;
   out_5427312182938220170[106] = 0;
   out_5427312182938220170[107] = 0;
   out_5427312182938220170[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5427312182938220170[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5427312182938220170[110] = 1;
   out_5427312182938220170[111] = 0;
   out_5427312182938220170[112] = 0;
   out_5427312182938220170[113] = 0;
   out_5427312182938220170[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5427312182938220170[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5427312182938220170[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5427312182938220170[117] = 0;
   out_5427312182938220170[118] = 0;
   out_5427312182938220170[119] = 0;
   out_5427312182938220170[120] = 0;
   out_5427312182938220170[121] = 0;
   out_5427312182938220170[122] = 0;
   out_5427312182938220170[123] = 0;
   out_5427312182938220170[124] = 0;
   out_5427312182938220170[125] = 0;
   out_5427312182938220170[126] = 0;
   out_5427312182938220170[127] = 0;
   out_5427312182938220170[128] = 0;
   out_5427312182938220170[129] = 0;
   out_5427312182938220170[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5427312182938220170[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5427312182938220170[132] = 1;
   out_5427312182938220170[133] = 0;
   out_5427312182938220170[134] = 0;
   out_5427312182938220170[135] = 0;
   out_5427312182938220170[136] = 0;
   out_5427312182938220170[137] = 0;
   out_5427312182938220170[138] = 0;
   out_5427312182938220170[139] = 0;
   out_5427312182938220170[140] = 0;
   out_5427312182938220170[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5427312182938220170[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5427312182938220170[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5427312182938220170[144] = 0;
   out_5427312182938220170[145] = 0;
   out_5427312182938220170[146] = 0;
   out_5427312182938220170[147] = 0;
   out_5427312182938220170[148] = 0;
   out_5427312182938220170[149] = 0;
   out_5427312182938220170[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5427312182938220170[151] = 0;
   out_5427312182938220170[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5427312182938220170[153] = 0;
   out_5427312182938220170[154] = 1;
   out_5427312182938220170[155] = 0;
   out_5427312182938220170[156] = 0;
   out_5427312182938220170[157] = 0;
   out_5427312182938220170[158] = 0;
   out_5427312182938220170[159] = 0;
   out_5427312182938220170[160] = 0;
   out_5427312182938220170[161] = 0;
   out_5427312182938220170[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5427312182938220170[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5427312182938220170[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5427312182938220170[165] = 0;
   out_5427312182938220170[166] = 0;
   out_5427312182938220170[167] = 0;
   out_5427312182938220170[168] = 0;
   out_5427312182938220170[169] = 0;
   out_5427312182938220170[170] = 0;
   out_5427312182938220170[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5427312182938220170[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5427312182938220170[173] = 0;
   out_5427312182938220170[174] = 0;
   out_5427312182938220170[175] = 0;
   out_5427312182938220170[176] = 1;
   out_5427312182938220170[177] = 0;
   out_5427312182938220170[178] = 0;
   out_5427312182938220170[179] = 0;
   out_5427312182938220170[180] = 0;
   out_5427312182938220170[181] = 0;
   out_5427312182938220170[182] = 0;
   out_5427312182938220170[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5427312182938220170[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5427312182938220170[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5427312182938220170[186] = 0;
   out_5427312182938220170[187] = 0;
   out_5427312182938220170[188] = 0;
   out_5427312182938220170[189] = 0;
   out_5427312182938220170[190] = 0;
   out_5427312182938220170[191] = 0;
   out_5427312182938220170[192] = 0;
   out_5427312182938220170[193] = 0;
   out_5427312182938220170[194] = 0;
   out_5427312182938220170[195] = 0;
   out_5427312182938220170[196] = 0;
   out_5427312182938220170[197] = 0;
   out_5427312182938220170[198] = 1;
   out_5427312182938220170[199] = 0;
   out_5427312182938220170[200] = 0;
   out_5427312182938220170[201] = 0;
   out_5427312182938220170[202] = 0;
   out_5427312182938220170[203] = 0;
   out_5427312182938220170[204] = 0;
   out_5427312182938220170[205] = 0;
   out_5427312182938220170[206] = 0;
   out_5427312182938220170[207] = 0;
   out_5427312182938220170[208] = 0;
   out_5427312182938220170[209] = 0;
   out_5427312182938220170[210] = 0;
   out_5427312182938220170[211] = 0;
   out_5427312182938220170[212] = 0;
   out_5427312182938220170[213] = 0;
   out_5427312182938220170[214] = 0;
   out_5427312182938220170[215] = 0;
   out_5427312182938220170[216] = 0;
   out_5427312182938220170[217] = 0;
   out_5427312182938220170[218] = 0;
   out_5427312182938220170[219] = 0;
   out_5427312182938220170[220] = 1;
   out_5427312182938220170[221] = 0;
   out_5427312182938220170[222] = 0;
   out_5427312182938220170[223] = 0;
   out_5427312182938220170[224] = 0;
   out_5427312182938220170[225] = 0;
   out_5427312182938220170[226] = 0;
   out_5427312182938220170[227] = 0;
   out_5427312182938220170[228] = 0;
   out_5427312182938220170[229] = 0;
   out_5427312182938220170[230] = 0;
   out_5427312182938220170[231] = 0;
   out_5427312182938220170[232] = 0;
   out_5427312182938220170[233] = 0;
   out_5427312182938220170[234] = 0;
   out_5427312182938220170[235] = 0;
   out_5427312182938220170[236] = 0;
   out_5427312182938220170[237] = 0;
   out_5427312182938220170[238] = 0;
   out_5427312182938220170[239] = 0;
   out_5427312182938220170[240] = 0;
   out_5427312182938220170[241] = 0;
   out_5427312182938220170[242] = 1;
   out_5427312182938220170[243] = 0;
   out_5427312182938220170[244] = 0;
   out_5427312182938220170[245] = 0;
   out_5427312182938220170[246] = 0;
   out_5427312182938220170[247] = 0;
   out_5427312182938220170[248] = 0;
   out_5427312182938220170[249] = 0;
   out_5427312182938220170[250] = 0;
   out_5427312182938220170[251] = 0;
   out_5427312182938220170[252] = 0;
   out_5427312182938220170[253] = 0;
   out_5427312182938220170[254] = 0;
   out_5427312182938220170[255] = 0;
   out_5427312182938220170[256] = 0;
   out_5427312182938220170[257] = 0;
   out_5427312182938220170[258] = 0;
   out_5427312182938220170[259] = 0;
   out_5427312182938220170[260] = 0;
   out_5427312182938220170[261] = 0;
   out_5427312182938220170[262] = 0;
   out_5427312182938220170[263] = 0;
   out_5427312182938220170[264] = 1;
   out_5427312182938220170[265] = 0;
   out_5427312182938220170[266] = 0;
   out_5427312182938220170[267] = 0;
   out_5427312182938220170[268] = 0;
   out_5427312182938220170[269] = 0;
   out_5427312182938220170[270] = 0;
   out_5427312182938220170[271] = 0;
   out_5427312182938220170[272] = 0;
   out_5427312182938220170[273] = 0;
   out_5427312182938220170[274] = 0;
   out_5427312182938220170[275] = 0;
   out_5427312182938220170[276] = 0;
   out_5427312182938220170[277] = 0;
   out_5427312182938220170[278] = 0;
   out_5427312182938220170[279] = 0;
   out_5427312182938220170[280] = 0;
   out_5427312182938220170[281] = 0;
   out_5427312182938220170[282] = 0;
   out_5427312182938220170[283] = 0;
   out_5427312182938220170[284] = 0;
   out_5427312182938220170[285] = 0;
   out_5427312182938220170[286] = 1;
   out_5427312182938220170[287] = 0;
   out_5427312182938220170[288] = 0;
   out_5427312182938220170[289] = 0;
   out_5427312182938220170[290] = 0;
   out_5427312182938220170[291] = 0;
   out_5427312182938220170[292] = 0;
   out_5427312182938220170[293] = 0;
   out_5427312182938220170[294] = 0;
   out_5427312182938220170[295] = 0;
   out_5427312182938220170[296] = 0;
   out_5427312182938220170[297] = 0;
   out_5427312182938220170[298] = 0;
   out_5427312182938220170[299] = 0;
   out_5427312182938220170[300] = 0;
   out_5427312182938220170[301] = 0;
   out_5427312182938220170[302] = 0;
   out_5427312182938220170[303] = 0;
   out_5427312182938220170[304] = 0;
   out_5427312182938220170[305] = 0;
   out_5427312182938220170[306] = 0;
   out_5427312182938220170[307] = 0;
   out_5427312182938220170[308] = 1;
   out_5427312182938220170[309] = 0;
   out_5427312182938220170[310] = 0;
   out_5427312182938220170[311] = 0;
   out_5427312182938220170[312] = 0;
   out_5427312182938220170[313] = 0;
   out_5427312182938220170[314] = 0;
   out_5427312182938220170[315] = 0;
   out_5427312182938220170[316] = 0;
   out_5427312182938220170[317] = 0;
   out_5427312182938220170[318] = 0;
   out_5427312182938220170[319] = 0;
   out_5427312182938220170[320] = 0;
   out_5427312182938220170[321] = 0;
   out_5427312182938220170[322] = 0;
   out_5427312182938220170[323] = 0;
   out_5427312182938220170[324] = 0;
   out_5427312182938220170[325] = 0;
   out_5427312182938220170[326] = 0;
   out_5427312182938220170[327] = 0;
   out_5427312182938220170[328] = 0;
   out_5427312182938220170[329] = 0;
   out_5427312182938220170[330] = 1;
   out_5427312182938220170[331] = 0;
   out_5427312182938220170[332] = 0;
   out_5427312182938220170[333] = 0;
   out_5427312182938220170[334] = 0;
   out_5427312182938220170[335] = 0;
   out_5427312182938220170[336] = 0;
   out_5427312182938220170[337] = 0;
   out_5427312182938220170[338] = 0;
   out_5427312182938220170[339] = 0;
   out_5427312182938220170[340] = 0;
   out_5427312182938220170[341] = 0;
   out_5427312182938220170[342] = 0;
   out_5427312182938220170[343] = 0;
   out_5427312182938220170[344] = 0;
   out_5427312182938220170[345] = 0;
   out_5427312182938220170[346] = 0;
   out_5427312182938220170[347] = 0;
   out_5427312182938220170[348] = 0;
   out_5427312182938220170[349] = 0;
   out_5427312182938220170[350] = 0;
   out_5427312182938220170[351] = 0;
   out_5427312182938220170[352] = 1;
   out_5427312182938220170[353] = 0;
   out_5427312182938220170[354] = 0;
   out_5427312182938220170[355] = 0;
   out_5427312182938220170[356] = 0;
   out_5427312182938220170[357] = 0;
   out_5427312182938220170[358] = 0;
   out_5427312182938220170[359] = 0;
   out_5427312182938220170[360] = 0;
   out_5427312182938220170[361] = 0;
   out_5427312182938220170[362] = 0;
   out_5427312182938220170[363] = 0;
   out_5427312182938220170[364] = 0;
   out_5427312182938220170[365] = 0;
   out_5427312182938220170[366] = 0;
   out_5427312182938220170[367] = 0;
   out_5427312182938220170[368] = 0;
   out_5427312182938220170[369] = 0;
   out_5427312182938220170[370] = 0;
   out_5427312182938220170[371] = 0;
   out_5427312182938220170[372] = 0;
   out_5427312182938220170[373] = 0;
   out_5427312182938220170[374] = 1;
   out_5427312182938220170[375] = 0;
   out_5427312182938220170[376] = 0;
   out_5427312182938220170[377] = 0;
   out_5427312182938220170[378] = 0;
   out_5427312182938220170[379] = 0;
   out_5427312182938220170[380] = 0;
   out_5427312182938220170[381] = 0;
   out_5427312182938220170[382] = 0;
   out_5427312182938220170[383] = 0;
   out_5427312182938220170[384] = 0;
   out_5427312182938220170[385] = 0;
   out_5427312182938220170[386] = 0;
   out_5427312182938220170[387] = 0;
   out_5427312182938220170[388] = 0;
   out_5427312182938220170[389] = 0;
   out_5427312182938220170[390] = 0;
   out_5427312182938220170[391] = 0;
   out_5427312182938220170[392] = 0;
   out_5427312182938220170[393] = 0;
   out_5427312182938220170[394] = 0;
   out_5427312182938220170[395] = 0;
   out_5427312182938220170[396] = 1;
   out_5427312182938220170[397] = 0;
   out_5427312182938220170[398] = 0;
   out_5427312182938220170[399] = 0;
   out_5427312182938220170[400] = 0;
   out_5427312182938220170[401] = 0;
   out_5427312182938220170[402] = 0;
   out_5427312182938220170[403] = 0;
   out_5427312182938220170[404] = 0;
   out_5427312182938220170[405] = 0;
   out_5427312182938220170[406] = 0;
   out_5427312182938220170[407] = 0;
   out_5427312182938220170[408] = 0;
   out_5427312182938220170[409] = 0;
   out_5427312182938220170[410] = 0;
   out_5427312182938220170[411] = 0;
   out_5427312182938220170[412] = 0;
   out_5427312182938220170[413] = 0;
   out_5427312182938220170[414] = 0;
   out_5427312182938220170[415] = 0;
   out_5427312182938220170[416] = 0;
   out_5427312182938220170[417] = 0;
   out_5427312182938220170[418] = 1;
   out_5427312182938220170[419] = 0;
   out_5427312182938220170[420] = 0;
   out_5427312182938220170[421] = 0;
   out_5427312182938220170[422] = 0;
   out_5427312182938220170[423] = 0;
   out_5427312182938220170[424] = 0;
   out_5427312182938220170[425] = 0;
   out_5427312182938220170[426] = 0;
   out_5427312182938220170[427] = 0;
   out_5427312182938220170[428] = 0;
   out_5427312182938220170[429] = 0;
   out_5427312182938220170[430] = 0;
   out_5427312182938220170[431] = 0;
   out_5427312182938220170[432] = 0;
   out_5427312182938220170[433] = 0;
   out_5427312182938220170[434] = 0;
   out_5427312182938220170[435] = 0;
   out_5427312182938220170[436] = 0;
   out_5427312182938220170[437] = 0;
   out_5427312182938220170[438] = 0;
   out_5427312182938220170[439] = 0;
   out_5427312182938220170[440] = 1;
}
void h_4(double *state, double *unused, double *out_7456474753437116369) {
   out_7456474753437116369[0] = state[10] + state[13];
   out_7456474753437116369[1] = state[11] + state[14];
   out_7456474753437116369[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7180700258772212243) {
   out_7180700258772212243[0] = 0;
   out_7180700258772212243[1] = 0;
   out_7180700258772212243[2] = 0;
   out_7180700258772212243[3] = 0;
   out_7180700258772212243[4] = 0;
   out_7180700258772212243[5] = 0;
   out_7180700258772212243[6] = 0;
   out_7180700258772212243[7] = 0;
   out_7180700258772212243[8] = 0;
   out_7180700258772212243[9] = 0;
   out_7180700258772212243[10] = 1;
   out_7180700258772212243[11] = 0;
   out_7180700258772212243[12] = 0;
   out_7180700258772212243[13] = 1;
   out_7180700258772212243[14] = 0;
   out_7180700258772212243[15] = 0;
   out_7180700258772212243[16] = 0;
   out_7180700258772212243[17] = 0;
   out_7180700258772212243[18] = 0;
   out_7180700258772212243[19] = 0;
   out_7180700258772212243[20] = 0;
   out_7180700258772212243[21] = 0;
   out_7180700258772212243[22] = 0;
   out_7180700258772212243[23] = 0;
   out_7180700258772212243[24] = 0;
   out_7180700258772212243[25] = 0;
   out_7180700258772212243[26] = 0;
   out_7180700258772212243[27] = 0;
   out_7180700258772212243[28] = 0;
   out_7180700258772212243[29] = 0;
   out_7180700258772212243[30] = 0;
   out_7180700258772212243[31] = 0;
   out_7180700258772212243[32] = 0;
   out_7180700258772212243[33] = 1;
   out_7180700258772212243[34] = 0;
   out_7180700258772212243[35] = 0;
   out_7180700258772212243[36] = 1;
   out_7180700258772212243[37] = 0;
   out_7180700258772212243[38] = 0;
   out_7180700258772212243[39] = 0;
   out_7180700258772212243[40] = 0;
   out_7180700258772212243[41] = 0;
   out_7180700258772212243[42] = 0;
   out_7180700258772212243[43] = 0;
   out_7180700258772212243[44] = 0;
   out_7180700258772212243[45] = 0;
   out_7180700258772212243[46] = 0;
   out_7180700258772212243[47] = 0;
   out_7180700258772212243[48] = 0;
   out_7180700258772212243[49] = 0;
   out_7180700258772212243[50] = 0;
   out_7180700258772212243[51] = 0;
   out_7180700258772212243[52] = 0;
   out_7180700258772212243[53] = 0;
   out_7180700258772212243[54] = 0;
   out_7180700258772212243[55] = 0;
   out_7180700258772212243[56] = 1;
   out_7180700258772212243[57] = 0;
   out_7180700258772212243[58] = 0;
   out_7180700258772212243[59] = 1;
   out_7180700258772212243[60] = 0;
   out_7180700258772212243[61] = 0;
   out_7180700258772212243[62] = 0;
   out_7180700258772212243[63] = 0;
   out_7180700258772212243[64] = 0;
   out_7180700258772212243[65] = 0;
}
void h_9(double *state, double *unused, double *out_323729581979990638) {
   out_323729581979990638[0] = state[10];
   out_323729581979990638[1] = state[11];
   out_323729581979990638[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7421889905401802888) {
   out_7421889905401802888[0] = 0;
   out_7421889905401802888[1] = 0;
   out_7421889905401802888[2] = 0;
   out_7421889905401802888[3] = 0;
   out_7421889905401802888[4] = 0;
   out_7421889905401802888[5] = 0;
   out_7421889905401802888[6] = 0;
   out_7421889905401802888[7] = 0;
   out_7421889905401802888[8] = 0;
   out_7421889905401802888[9] = 0;
   out_7421889905401802888[10] = 1;
   out_7421889905401802888[11] = 0;
   out_7421889905401802888[12] = 0;
   out_7421889905401802888[13] = 0;
   out_7421889905401802888[14] = 0;
   out_7421889905401802888[15] = 0;
   out_7421889905401802888[16] = 0;
   out_7421889905401802888[17] = 0;
   out_7421889905401802888[18] = 0;
   out_7421889905401802888[19] = 0;
   out_7421889905401802888[20] = 0;
   out_7421889905401802888[21] = 0;
   out_7421889905401802888[22] = 0;
   out_7421889905401802888[23] = 0;
   out_7421889905401802888[24] = 0;
   out_7421889905401802888[25] = 0;
   out_7421889905401802888[26] = 0;
   out_7421889905401802888[27] = 0;
   out_7421889905401802888[28] = 0;
   out_7421889905401802888[29] = 0;
   out_7421889905401802888[30] = 0;
   out_7421889905401802888[31] = 0;
   out_7421889905401802888[32] = 0;
   out_7421889905401802888[33] = 1;
   out_7421889905401802888[34] = 0;
   out_7421889905401802888[35] = 0;
   out_7421889905401802888[36] = 0;
   out_7421889905401802888[37] = 0;
   out_7421889905401802888[38] = 0;
   out_7421889905401802888[39] = 0;
   out_7421889905401802888[40] = 0;
   out_7421889905401802888[41] = 0;
   out_7421889905401802888[42] = 0;
   out_7421889905401802888[43] = 0;
   out_7421889905401802888[44] = 0;
   out_7421889905401802888[45] = 0;
   out_7421889905401802888[46] = 0;
   out_7421889905401802888[47] = 0;
   out_7421889905401802888[48] = 0;
   out_7421889905401802888[49] = 0;
   out_7421889905401802888[50] = 0;
   out_7421889905401802888[51] = 0;
   out_7421889905401802888[52] = 0;
   out_7421889905401802888[53] = 0;
   out_7421889905401802888[54] = 0;
   out_7421889905401802888[55] = 0;
   out_7421889905401802888[56] = 1;
   out_7421889905401802888[57] = 0;
   out_7421889905401802888[58] = 0;
   out_7421889905401802888[59] = 0;
   out_7421889905401802888[60] = 0;
   out_7421889905401802888[61] = 0;
   out_7421889905401802888[62] = 0;
   out_7421889905401802888[63] = 0;
   out_7421889905401802888[64] = 0;
   out_7421889905401802888[65] = 0;
}
void h_10(double *state, double *unused, double *out_1677691710343043568) {
   out_1677691710343043568[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1677691710343043568[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1677691710343043568[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_264734576426783723) {
   out_264734576426783723[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_264734576426783723[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_264734576426783723[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_264734576426783723[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_264734576426783723[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_264734576426783723[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_264734576426783723[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_264734576426783723[7] = 0;
   out_264734576426783723[8] = 0;
   out_264734576426783723[9] = 0;
   out_264734576426783723[10] = 0;
   out_264734576426783723[11] = 0;
   out_264734576426783723[12] = 0;
   out_264734576426783723[13] = 0;
   out_264734576426783723[14] = 0;
   out_264734576426783723[15] = 0;
   out_264734576426783723[16] = 1;
   out_264734576426783723[17] = 0;
   out_264734576426783723[18] = 0;
   out_264734576426783723[19] = 1;
   out_264734576426783723[20] = 0;
   out_264734576426783723[21] = 0;
   out_264734576426783723[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_264734576426783723[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_264734576426783723[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_264734576426783723[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_264734576426783723[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_264734576426783723[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_264734576426783723[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_264734576426783723[29] = 0;
   out_264734576426783723[30] = 0;
   out_264734576426783723[31] = 0;
   out_264734576426783723[32] = 0;
   out_264734576426783723[33] = 0;
   out_264734576426783723[34] = 0;
   out_264734576426783723[35] = 0;
   out_264734576426783723[36] = 0;
   out_264734576426783723[37] = 0;
   out_264734576426783723[38] = 0;
   out_264734576426783723[39] = 1;
   out_264734576426783723[40] = 0;
   out_264734576426783723[41] = 0;
   out_264734576426783723[42] = 1;
   out_264734576426783723[43] = 0;
   out_264734576426783723[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_264734576426783723[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_264734576426783723[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_264734576426783723[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_264734576426783723[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_264734576426783723[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_264734576426783723[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_264734576426783723[51] = 0;
   out_264734576426783723[52] = 0;
   out_264734576426783723[53] = 0;
   out_264734576426783723[54] = 0;
   out_264734576426783723[55] = 0;
   out_264734576426783723[56] = 0;
   out_264734576426783723[57] = 0;
   out_264734576426783723[58] = 0;
   out_264734576426783723[59] = 0;
   out_264734576426783723[60] = 0;
   out_264734576426783723[61] = 0;
   out_264734576426783723[62] = 1;
   out_264734576426783723[63] = 0;
   out_264734576426783723[64] = 0;
   out_264734576426783723[65] = 1;
}
void h_12(double *state, double *unused, double *out_8586791845152645926) {
   out_8586791845152645926[0] = state[0];
   out_8586791845152645926[1] = state[1];
   out_8586791845152645926[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6246587406905377578) {
   out_6246587406905377578[0] = 1;
   out_6246587406905377578[1] = 0;
   out_6246587406905377578[2] = 0;
   out_6246587406905377578[3] = 0;
   out_6246587406905377578[4] = 0;
   out_6246587406905377578[5] = 0;
   out_6246587406905377578[6] = 0;
   out_6246587406905377578[7] = 0;
   out_6246587406905377578[8] = 0;
   out_6246587406905377578[9] = 0;
   out_6246587406905377578[10] = 0;
   out_6246587406905377578[11] = 0;
   out_6246587406905377578[12] = 0;
   out_6246587406905377578[13] = 0;
   out_6246587406905377578[14] = 0;
   out_6246587406905377578[15] = 0;
   out_6246587406905377578[16] = 0;
   out_6246587406905377578[17] = 0;
   out_6246587406905377578[18] = 0;
   out_6246587406905377578[19] = 0;
   out_6246587406905377578[20] = 0;
   out_6246587406905377578[21] = 0;
   out_6246587406905377578[22] = 0;
   out_6246587406905377578[23] = 1;
   out_6246587406905377578[24] = 0;
   out_6246587406905377578[25] = 0;
   out_6246587406905377578[26] = 0;
   out_6246587406905377578[27] = 0;
   out_6246587406905377578[28] = 0;
   out_6246587406905377578[29] = 0;
   out_6246587406905377578[30] = 0;
   out_6246587406905377578[31] = 0;
   out_6246587406905377578[32] = 0;
   out_6246587406905377578[33] = 0;
   out_6246587406905377578[34] = 0;
   out_6246587406905377578[35] = 0;
   out_6246587406905377578[36] = 0;
   out_6246587406905377578[37] = 0;
   out_6246587406905377578[38] = 0;
   out_6246587406905377578[39] = 0;
   out_6246587406905377578[40] = 0;
   out_6246587406905377578[41] = 0;
   out_6246587406905377578[42] = 0;
   out_6246587406905377578[43] = 0;
   out_6246587406905377578[44] = 0;
   out_6246587406905377578[45] = 0;
   out_6246587406905377578[46] = 1;
   out_6246587406905377578[47] = 0;
   out_6246587406905377578[48] = 0;
   out_6246587406905377578[49] = 0;
   out_6246587406905377578[50] = 0;
   out_6246587406905377578[51] = 0;
   out_6246587406905377578[52] = 0;
   out_6246587406905377578[53] = 0;
   out_6246587406905377578[54] = 0;
   out_6246587406905377578[55] = 0;
   out_6246587406905377578[56] = 0;
   out_6246587406905377578[57] = 0;
   out_6246587406905377578[58] = 0;
   out_6246587406905377578[59] = 0;
   out_6246587406905377578[60] = 0;
   out_6246587406905377578[61] = 0;
   out_6246587406905377578[62] = 0;
   out_6246587406905377578[63] = 0;
   out_6246587406905377578[64] = 0;
   out_6246587406905377578[65] = 0;
}
void h_31(double *state, double *unused, double *out_7690004094545926106) {
   out_7690004094545926106[0] = state[7];
   out_7690004094545926106[1] = state[8];
   out_7690004094545926106[2] = state[9];
}
void H_31(double *state, double *unused, double *out_3501024374580363869) {
   out_3501024374580363869[0] = 0;
   out_3501024374580363869[1] = 0;
   out_3501024374580363869[2] = 0;
   out_3501024374580363869[3] = 0;
   out_3501024374580363869[4] = 0;
   out_3501024374580363869[5] = 0;
   out_3501024374580363869[6] = 0;
   out_3501024374580363869[7] = 1;
   out_3501024374580363869[8] = 0;
   out_3501024374580363869[9] = 0;
   out_3501024374580363869[10] = 0;
   out_3501024374580363869[11] = 0;
   out_3501024374580363869[12] = 0;
   out_3501024374580363869[13] = 0;
   out_3501024374580363869[14] = 0;
   out_3501024374580363869[15] = 0;
   out_3501024374580363869[16] = 0;
   out_3501024374580363869[17] = 0;
   out_3501024374580363869[18] = 0;
   out_3501024374580363869[19] = 0;
   out_3501024374580363869[20] = 0;
   out_3501024374580363869[21] = 0;
   out_3501024374580363869[22] = 0;
   out_3501024374580363869[23] = 0;
   out_3501024374580363869[24] = 0;
   out_3501024374580363869[25] = 0;
   out_3501024374580363869[26] = 0;
   out_3501024374580363869[27] = 0;
   out_3501024374580363869[28] = 0;
   out_3501024374580363869[29] = 0;
   out_3501024374580363869[30] = 1;
   out_3501024374580363869[31] = 0;
   out_3501024374580363869[32] = 0;
   out_3501024374580363869[33] = 0;
   out_3501024374580363869[34] = 0;
   out_3501024374580363869[35] = 0;
   out_3501024374580363869[36] = 0;
   out_3501024374580363869[37] = 0;
   out_3501024374580363869[38] = 0;
   out_3501024374580363869[39] = 0;
   out_3501024374580363869[40] = 0;
   out_3501024374580363869[41] = 0;
   out_3501024374580363869[42] = 0;
   out_3501024374580363869[43] = 0;
   out_3501024374580363869[44] = 0;
   out_3501024374580363869[45] = 0;
   out_3501024374580363869[46] = 0;
   out_3501024374580363869[47] = 0;
   out_3501024374580363869[48] = 0;
   out_3501024374580363869[49] = 0;
   out_3501024374580363869[50] = 0;
   out_3501024374580363869[51] = 0;
   out_3501024374580363869[52] = 0;
   out_3501024374580363869[53] = 1;
   out_3501024374580363869[54] = 0;
   out_3501024374580363869[55] = 0;
   out_3501024374580363869[56] = 0;
   out_3501024374580363869[57] = 0;
   out_3501024374580363869[58] = 0;
   out_3501024374580363869[59] = 0;
   out_3501024374580363869[60] = 0;
   out_3501024374580363869[61] = 0;
   out_3501024374580363869[62] = 0;
   out_3501024374580363869[63] = 0;
   out_3501024374580363869[64] = 0;
   out_3501024374580363869[65] = 0;
}
void h_32(double *state, double *unused, double *out_2860583090773705045) {
   out_2860583090773705045[0] = state[3];
   out_2860583090773705045[1] = state[4];
   out_2860583090773705045[2] = state[5];
   out_2860583090773705045[3] = state[6];
}
void H_32(double *state, double *unused, double *out_3632497812450703263) {
   out_3632497812450703263[0] = 0;
   out_3632497812450703263[1] = 0;
   out_3632497812450703263[2] = 0;
   out_3632497812450703263[3] = 1;
   out_3632497812450703263[4] = 0;
   out_3632497812450703263[5] = 0;
   out_3632497812450703263[6] = 0;
   out_3632497812450703263[7] = 0;
   out_3632497812450703263[8] = 0;
   out_3632497812450703263[9] = 0;
   out_3632497812450703263[10] = 0;
   out_3632497812450703263[11] = 0;
   out_3632497812450703263[12] = 0;
   out_3632497812450703263[13] = 0;
   out_3632497812450703263[14] = 0;
   out_3632497812450703263[15] = 0;
   out_3632497812450703263[16] = 0;
   out_3632497812450703263[17] = 0;
   out_3632497812450703263[18] = 0;
   out_3632497812450703263[19] = 0;
   out_3632497812450703263[20] = 0;
   out_3632497812450703263[21] = 0;
   out_3632497812450703263[22] = 0;
   out_3632497812450703263[23] = 0;
   out_3632497812450703263[24] = 0;
   out_3632497812450703263[25] = 0;
   out_3632497812450703263[26] = 1;
   out_3632497812450703263[27] = 0;
   out_3632497812450703263[28] = 0;
   out_3632497812450703263[29] = 0;
   out_3632497812450703263[30] = 0;
   out_3632497812450703263[31] = 0;
   out_3632497812450703263[32] = 0;
   out_3632497812450703263[33] = 0;
   out_3632497812450703263[34] = 0;
   out_3632497812450703263[35] = 0;
   out_3632497812450703263[36] = 0;
   out_3632497812450703263[37] = 0;
   out_3632497812450703263[38] = 0;
   out_3632497812450703263[39] = 0;
   out_3632497812450703263[40] = 0;
   out_3632497812450703263[41] = 0;
   out_3632497812450703263[42] = 0;
   out_3632497812450703263[43] = 0;
   out_3632497812450703263[44] = 0;
   out_3632497812450703263[45] = 0;
   out_3632497812450703263[46] = 0;
   out_3632497812450703263[47] = 0;
   out_3632497812450703263[48] = 0;
   out_3632497812450703263[49] = 1;
   out_3632497812450703263[50] = 0;
   out_3632497812450703263[51] = 0;
   out_3632497812450703263[52] = 0;
   out_3632497812450703263[53] = 0;
   out_3632497812450703263[54] = 0;
   out_3632497812450703263[55] = 0;
   out_3632497812450703263[56] = 0;
   out_3632497812450703263[57] = 0;
   out_3632497812450703263[58] = 0;
   out_3632497812450703263[59] = 0;
   out_3632497812450703263[60] = 0;
   out_3632497812450703263[61] = 0;
   out_3632497812450703263[62] = 0;
   out_3632497812450703263[63] = 0;
   out_3632497812450703263[64] = 0;
   out_3632497812450703263[65] = 0;
   out_3632497812450703263[66] = 0;
   out_3632497812450703263[67] = 0;
   out_3632497812450703263[68] = 0;
   out_3632497812450703263[69] = 0;
   out_3632497812450703263[70] = 0;
   out_3632497812450703263[71] = 0;
   out_3632497812450703263[72] = 1;
   out_3632497812450703263[73] = 0;
   out_3632497812450703263[74] = 0;
   out_3632497812450703263[75] = 0;
   out_3632497812450703263[76] = 0;
   out_3632497812450703263[77] = 0;
   out_3632497812450703263[78] = 0;
   out_3632497812450703263[79] = 0;
   out_3632497812450703263[80] = 0;
   out_3632497812450703263[81] = 0;
   out_3632497812450703263[82] = 0;
   out_3632497812450703263[83] = 0;
   out_3632497812450703263[84] = 0;
   out_3632497812450703263[85] = 0;
   out_3632497812450703263[86] = 0;
   out_3632497812450703263[87] = 0;
}
void h_13(double *state, double *unused, double *out_9219879842723371893) {
   out_9219879842723371893[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_9219879842723371893[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_9219879842723371893[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8156648507180591640) {
   out_8156648507180591640[0] = 0;
   out_8156648507180591640[1] = 0;
   out_8156648507180591640[2] = 0;
   out_8156648507180591640[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8156648507180591640[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8156648507180591640[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8156648507180591640[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8156648507180591640[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8156648507180591640[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8156648507180591640[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8156648507180591640[10] = 0;
   out_8156648507180591640[11] = 0;
   out_8156648507180591640[12] = 0;
   out_8156648507180591640[13] = 0;
   out_8156648507180591640[14] = 0;
   out_8156648507180591640[15] = 0;
   out_8156648507180591640[16] = 0;
   out_8156648507180591640[17] = 0;
   out_8156648507180591640[18] = 0;
   out_8156648507180591640[19] = 0;
   out_8156648507180591640[20] = 0;
   out_8156648507180591640[21] = 0;
   out_8156648507180591640[22] = 0;
   out_8156648507180591640[23] = 0;
   out_8156648507180591640[24] = 0;
   out_8156648507180591640[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8156648507180591640[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8156648507180591640[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8156648507180591640[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8156648507180591640[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8156648507180591640[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8156648507180591640[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8156648507180591640[32] = 0;
   out_8156648507180591640[33] = 0;
   out_8156648507180591640[34] = 0;
   out_8156648507180591640[35] = 0;
   out_8156648507180591640[36] = 0;
   out_8156648507180591640[37] = 0;
   out_8156648507180591640[38] = 0;
   out_8156648507180591640[39] = 0;
   out_8156648507180591640[40] = 0;
   out_8156648507180591640[41] = 0;
   out_8156648507180591640[42] = 0;
   out_8156648507180591640[43] = 0;
   out_8156648507180591640[44] = 0;
   out_8156648507180591640[45] = 0;
   out_8156648507180591640[46] = 0;
   out_8156648507180591640[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8156648507180591640[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8156648507180591640[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8156648507180591640[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8156648507180591640[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8156648507180591640[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8156648507180591640[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8156648507180591640[54] = 0;
   out_8156648507180591640[55] = 0;
   out_8156648507180591640[56] = 0;
   out_8156648507180591640[57] = 0;
   out_8156648507180591640[58] = 0;
   out_8156648507180591640[59] = 0;
   out_8156648507180591640[60] = 0;
   out_8156648507180591640[61] = 0;
   out_8156648507180591640[62] = 0;
   out_8156648507180591640[63] = 0;
   out_8156648507180591640[64] = 0;
   out_8156648507180591640[65] = 0;
}
void h_14(double *state, double *unused, double *out_323729581979990638) {
   out_323729581979990638[0] = state[10];
   out_323729581979990638[1] = state[11];
   out_323729581979990638[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7421889905401802888) {
   out_7421889905401802888[0] = 0;
   out_7421889905401802888[1] = 0;
   out_7421889905401802888[2] = 0;
   out_7421889905401802888[3] = 0;
   out_7421889905401802888[4] = 0;
   out_7421889905401802888[5] = 0;
   out_7421889905401802888[6] = 0;
   out_7421889905401802888[7] = 0;
   out_7421889905401802888[8] = 0;
   out_7421889905401802888[9] = 0;
   out_7421889905401802888[10] = 1;
   out_7421889905401802888[11] = 0;
   out_7421889905401802888[12] = 0;
   out_7421889905401802888[13] = 0;
   out_7421889905401802888[14] = 0;
   out_7421889905401802888[15] = 0;
   out_7421889905401802888[16] = 0;
   out_7421889905401802888[17] = 0;
   out_7421889905401802888[18] = 0;
   out_7421889905401802888[19] = 0;
   out_7421889905401802888[20] = 0;
   out_7421889905401802888[21] = 0;
   out_7421889905401802888[22] = 0;
   out_7421889905401802888[23] = 0;
   out_7421889905401802888[24] = 0;
   out_7421889905401802888[25] = 0;
   out_7421889905401802888[26] = 0;
   out_7421889905401802888[27] = 0;
   out_7421889905401802888[28] = 0;
   out_7421889905401802888[29] = 0;
   out_7421889905401802888[30] = 0;
   out_7421889905401802888[31] = 0;
   out_7421889905401802888[32] = 0;
   out_7421889905401802888[33] = 1;
   out_7421889905401802888[34] = 0;
   out_7421889905401802888[35] = 0;
   out_7421889905401802888[36] = 0;
   out_7421889905401802888[37] = 0;
   out_7421889905401802888[38] = 0;
   out_7421889905401802888[39] = 0;
   out_7421889905401802888[40] = 0;
   out_7421889905401802888[41] = 0;
   out_7421889905401802888[42] = 0;
   out_7421889905401802888[43] = 0;
   out_7421889905401802888[44] = 0;
   out_7421889905401802888[45] = 0;
   out_7421889905401802888[46] = 0;
   out_7421889905401802888[47] = 0;
   out_7421889905401802888[48] = 0;
   out_7421889905401802888[49] = 0;
   out_7421889905401802888[50] = 0;
   out_7421889905401802888[51] = 0;
   out_7421889905401802888[52] = 0;
   out_7421889905401802888[53] = 0;
   out_7421889905401802888[54] = 0;
   out_7421889905401802888[55] = 0;
   out_7421889905401802888[56] = 1;
   out_7421889905401802888[57] = 0;
   out_7421889905401802888[58] = 0;
   out_7421889905401802888[59] = 0;
   out_7421889905401802888[60] = 0;
   out_7421889905401802888[61] = 0;
   out_7421889905401802888[62] = 0;
   out_7421889905401802888[63] = 0;
   out_7421889905401802888[64] = 0;
   out_7421889905401802888[65] = 0;
}
void h_33(double *state, double *unused, double *out_1541830281133406774) {
   out_1541830281133406774[0] = state[16];
   out_1541830281133406774[1] = state[17];
   out_1541830281133406774[2] = state[18];
}
void H_33(double *state, double *unused, double *out_350467369941506265) {
   out_350467369941506265[0] = 0;
   out_350467369941506265[1] = 0;
   out_350467369941506265[2] = 0;
   out_350467369941506265[3] = 0;
   out_350467369941506265[4] = 0;
   out_350467369941506265[5] = 0;
   out_350467369941506265[6] = 0;
   out_350467369941506265[7] = 0;
   out_350467369941506265[8] = 0;
   out_350467369941506265[9] = 0;
   out_350467369941506265[10] = 0;
   out_350467369941506265[11] = 0;
   out_350467369941506265[12] = 0;
   out_350467369941506265[13] = 0;
   out_350467369941506265[14] = 0;
   out_350467369941506265[15] = 0;
   out_350467369941506265[16] = 1;
   out_350467369941506265[17] = 0;
   out_350467369941506265[18] = 0;
   out_350467369941506265[19] = 0;
   out_350467369941506265[20] = 0;
   out_350467369941506265[21] = 0;
   out_350467369941506265[22] = 0;
   out_350467369941506265[23] = 0;
   out_350467369941506265[24] = 0;
   out_350467369941506265[25] = 0;
   out_350467369941506265[26] = 0;
   out_350467369941506265[27] = 0;
   out_350467369941506265[28] = 0;
   out_350467369941506265[29] = 0;
   out_350467369941506265[30] = 0;
   out_350467369941506265[31] = 0;
   out_350467369941506265[32] = 0;
   out_350467369941506265[33] = 0;
   out_350467369941506265[34] = 0;
   out_350467369941506265[35] = 0;
   out_350467369941506265[36] = 0;
   out_350467369941506265[37] = 0;
   out_350467369941506265[38] = 0;
   out_350467369941506265[39] = 1;
   out_350467369941506265[40] = 0;
   out_350467369941506265[41] = 0;
   out_350467369941506265[42] = 0;
   out_350467369941506265[43] = 0;
   out_350467369941506265[44] = 0;
   out_350467369941506265[45] = 0;
   out_350467369941506265[46] = 0;
   out_350467369941506265[47] = 0;
   out_350467369941506265[48] = 0;
   out_350467369941506265[49] = 0;
   out_350467369941506265[50] = 0;
   out_350467369941506265[51] = 0;
   out_350467369941506265[52] = 0;
   out_350467369941506265[53] = 0;
   out_350467369941506265[54] = 0;
   out_350467369941506265[55] = 0;
   out_350467369941506265[56] = 0;
   out_350467369941506265[57] = 0;
   out_350467369941506265[58] = 0;
   out_350467369941506265[59] = 0;
   out_350467369941506265[60] = 0;
   out_350467369941506265[61] = 0;
   out_350467369941506265[62] = 1;
   out_350467369941506265[63] = 0;
   out_350467369941506265[64] = 0;
   out_350467369941506265[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_6053851564587979273) {
  H(in_vec, out_6053851564587979273);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7389794714027921961) {
  err_fun(nom_x, delta_x, out_7389794714027921961);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5057486488975891714) {
  inv_err_fun(nom_x, true_x, out_5057486488975891714);
}
void live_H_mod_fun(double *state, double *out_6748075909193761881) {
  H_mod_fun(state, out_6748075909193761881);
}
void live_f_fun(double *state, double dt, double *out_8074529069450670553) {
  f_fun(state,  dt, out_8074529069450670553);
}
void live_F_fun(double *state, double dt, double *out_5427312182938220170) {
  F_fun(state,  dt, out_5427312182938220170);
}
void live_h_4(double *state, double *unused, double *out_7456474753437116369) {
  h_4(state, unused, out_7456474753437116369);
}
void live_H_4(double *state, double *unused, double *out_7180700258772212243) {
  H_4(state, unused, out_7180700258772212243);
}
void live_h_9(double *state, double *unused, double *out_323729581979990638) {
  h_9(state, unused, out_323729581979990638);
}
void live_H_9(double *state, double *unused, double *out_7421889905401802888) {
  H_9(state, unused, out_7421889905401802888);
}
void live_h_10(double *state, double *unused, double *out_1677691710343043568) {
  h_10(state, unused, out_1677691710343043568);
}
void live_H_10(double *state, double *unused, double *out_264734576426783723) {
  H_10(state, unused, out_264734576426783723);
}
void live_h_12(double *state, double *unused, double *out_8586791845152645926) {
  h_12(state, unused, out_8586791845152645926);
}
void live_H_12(double *state, double *unused, double *out_6246587406905377578) {
  H_12(state, unused, out_6246587406905377578);
}
void live_h_31(double *state, double *unused, double *out_7690004094545926106) {
  h_31(state, unused, out_7690004094545926106);
}
void live_H_31(double *state, double *unused, double *out_3501024374580363869) {
  H_31(state, unused, out_3501024374580363869);
}
void live_h_32(double *state, double *unused, double *out_2860583090773705045) {
  h_32(state, unused, out_2860583090773705045);
}
void live_H_32(double *state, double *unused, double *out_3632497812450703263) {
  H_32(state, unused, out_3632497812450703263);
}
void live_h_13(double *state, double *unused, double *out_9219879842723371893) {
  h_13(state, unused, out_9219879842723371893);
}
void live_H_13(double *state, double *unused, double *out_8156648507180591640) {
  H_13(state, unused, out_8156648507180591640);
}
void live_h_14(double *state, double *unused, double *out_323729581979990638) {
  h_14(state, unused, out_323729581979990638);
}
void live_H_14(double *state, double *unused, double *out_7421889905401802888) {
  H_14(state, unused, out_7421889905401802888);
}
void live_h_33(double *state, double *unused, double *out_1541830281133406774) {
  h_33(state, unused, out_1541830281133406774);
}
void live_H_33(double *state, double *unused, double *out_350467369941506265) {
  H_33(state, unused, out_350467369941506265);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
